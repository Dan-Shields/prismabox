export const UserPlain = Type.Object({
    id: Type.Optional(Type.Integer()),
    name: Type.String(),
}{ description: "The user model" }); export type UserPlainType = Static<typeof UserPlain>; export const UserReferences = Type.Object({ posts: Type.Optional(Type.Array(PostPlain)), }{ description: "The user model" }); export type UserReferencesType = Static<typeof UserReferences>; export const UserReferencesDeep = Type.Object({ posts: Type.Optional(Type.Array(Post)), }{ description: "The user model" }); export type UserReferencesDeepType = Static<typeof UserReferencesDeep>; export const User = Type.Composite([UserPlain, UserReferences]); export type UserType = Static<typeof UserReferences>; export const UserDeep = Type.Composite([UserPlain, UserReferencesDeep]); export type UserDeepType = Static<typeof UserDeep>;
export const PostPlain = Type.Object({ id: Type.Optional(Type.Integer()), createdAt: Type.Optional(Type.Date()), userId: Type.Integer(), }{ description: "The post model" }); export type PostPlainType = Static<typeof PostPlain>; export const PostReferences = Type.Object({ User: UserPlain, }{ description: "The post model" }); export type PostReferencesType = Static<typeof PostReferences>; export const PostReferencesDeep = Type.Object({ User: User, }{ description: "The post model" }); export type PostReferencesDeepType = Static<typeof PostReferencesDeep>; export const Post = Type.Composite([PostPlain, PostReferences]); export type PostType = Static<typeof PostReferences>; export const PostDeep = Type.Composite([PostPlain, PostReferencesDeep]); export type PostDeepType = Static<typeof PostDeep>;